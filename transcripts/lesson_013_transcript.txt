 All right, lesson two of design. We are going to dive into wire framing. So the term wire framing is essentially to put in the bones or the skeleton of your app. Now, in the previous lesson, we went over the basics of Figma. Now we're gonna get into actual app design. So there are three primary steps here that I employ. The first one is to define the core actions and user journey. You should have done some of this already in the process of ideation, but it's worth doing again as you begin wire framing. Next, a core element of wire framing is to start with low fidelity. Wire frames are low fidelity. Low fidelity means that you're not worried about colors or corner radiuses and whatnot. Even though I showed you that in the previous lesson, it's not so important. What we're really focused on is what goes where, right? User experience. What elements go in what spots and what they lead to and the sort of actions and transformations that are performed by the software on the user input, data, whatever it may be. The third is kits. I love this term. I try to remind myself of it every single day, which is keep it simple, stupid. This is an acronym that applies to so much in life. I was, we were filming a podcast today and I made the remark that it's interesting to see how many indie hackers and software developers employ very complex app store optimization and sort of, you know, hacky, not hacky, but complex design techniques and engineering, and yet they're at $400 in MRR or monthly recurring revenue. Meanwhile, when I launched RISGPT, we hit over $80,000 a month within just three days because we kept it super simple and we focused on the things that mattered, which at the time was distribution and going viral and getting money in the door so that we could use that cash to deploy for future growth. So the same way that it applies to how you operate your business, it really applies to the start of design and wire framing. Complexity will only increase as you go throughout the process of designing your app. You're gonna continue to add and add and add screens. It's a lot easier to start simple and slowly expand into start complex and then make it simple. I see people all the time, they start with this incredibly complicated app. I'm like, dude, I don't even fucking know how to use this, right? It should be like a three year old should be able to use your product or, you know, maybe more realistically, I think a term I've used is your product should be able to be used by a seven and a 70 year old. So for many reasons, keep it simple. One reason that it's really important to begin wire framing as quickly as possible is in my opinion, it is required if you want people to actually believe in your vision. I have people hit me up all the time to say, hey, man, can you review my idea? Like, I wanna build this app blah, blah, blah. I go, yes, send me the, send me the Figma file and it's silence, right? They don't have it. And I'm like, man, wire framing should take you no more than a couple of minutes. If you're really just trying to move as quickly as possible and it will make the vision much more clear for anyone that sees it, right? So more data means more informed decision-making both for yourself and others. All right, enough of the background. Let's get into it. All right, so context real quick. I'm coming into this with pretty much no preconceived notions. I want this to be raw and authentic rather than planned out. And so I'm gonna try to walk you guys through my thought process. What this means is I'm not going to design an entire application within these lessons, but I'm gonna share with you guys how I think about the design. Okay, so honestly, here, I wanna start with text. I almost always do this. I'm gonna increase the size of this. So it's a little bit more visible. Let's go even more honestly. Okay. So later on, we're gonna define in the, I think two lessons from now, we're gonna go deeper into core or primary and secondary actions, but for now, as we begin wire-framing, I'm just gonna kind of jot down a couple of actions. So this might be a little bit too big. We go, yeah, I like this. Actions. All right, so if we're trying to help people increase their testosterone, right? This is the problem that we're solving. We should first think about what do we need from the individual, right? One of the major advantages of applications as a whole is that they're interactive, right? It's not just text or an article where you come into this product and then it's just everything's pre-packaged, right? We can add interactions. And so for here, I think that the first thing is getting data from the individual. So if we want to improve testosterone, I think I'm gonna jot down some things that are valuable. I'm gonna make this even smaller. So I'm gonna be typing a good amount. Self, selfie of face, picture of body, demographic, and then so demographic, meaning, age, gender. I think that this will be pretty much all men. So we're not gonna assume that they're male, they're female that wants to optimize their testosterone for whatever reason that maybe the app won't be great for them. So we can just chop this down to age, race, race. I don't know the degree to which testosterone's correlated with race, but could be important. And then let's see like a lifestyle, right? So how often do you exercise what sort of food do you eat? Okay, I think this is kind of like a core information that we want to get from the individual. So these aren't actions themselves. So the action here would be receive in analysis or input your data. Okay, so now anytime that we have an action that the user takes, we should think about what is the result. Here, we're getting the inputs from the user. So what is the output going to be? We can do UMAC style. So UMACs, you get face ratings and recommendations. So we'll do what are some things that people are interested in? They're probably interested in, so now we'll do output of the data. So this will be the analysis. People are interested in estimated to stosh your own. I think that that is the most obvious one to start. Maybe biological age, depending on the questions that we ask, that could be pretty interesting. So these are the more predictive components. Maybe like a masculinity score, but that's just kind of estimated testosterone. Percentile, we should add that in the estimated testosterone. Percentile relative to age. Okay, I think that that... Yeah, so this is like the sort of like rating, right? These are like the predictions that we're making, the scores that we're giving to the individual, and next we have recommendations. So one component here to think about is like, how do we make the recommendations personalized rather than just like how often do you exercise one time per week? And then the recommendation is just exercise more, you know? That's kind of obvious. So I think that this is where the selfie and body come into play. Ooh, so we should do a physique rating. You can even do facial rating. So beyond just the estimated testosterone, right? This is all encompassing. These would be more specific. All right, so we're gonna take all this and we're actually gonna all nest this under. This will be the analysis, we'll say. So within the output, we have the analysis and we have the recommendations. Okay, recommendations. Okay. Okay. Based on body slash. So actually we don't have to explain the methodology of how we produce it, but exercise frequency, sleep improvement. You know, when we make this beyond just test max, like me, we make this like a holistic version of UMax, right? This is what UMax was always kind of intended to be. All right. Dot it, obviously, sleep, but the, yeah, yeah, yeah. Oh, yeah, you're asleep. Okay. Cool. Some that you might notice is that like while I'm explaining and going through this process, I'm significantly less structured or clear thinking as I usually am, or at least strive to be. Part of the reason is because this is inherently very, it's a very creative endeavor and there's gonna be a lot of iteration in trying to figure out what the correct inputs and outputs look like as well as sort of functionality. Okay. And so once you get this output, I think the important component here is something along the lines of habit tracking and accountability. So accountability plus tracking. So this is why it's very important to get screenshots of comparable apps. Once again, like I would have way more, I'd have like 100 plus screenshots if I were actually going through the full process of building it at myself. But I really like what Quitter has here and I think Opal has something similar too, which is like the core functionality, like the first fucking thing that you see when you open the app is your streak. And I think that that's pretty important here, invaluable. Okay. So in the previous lesson, we did some basic sort of mocking of redesigning UMax. We're gonna do somewhat similar design here, but it's gonna be different, right? We're not just redesigning UMax. So I think I kind of want to merge UMax and Quitter. All right. I'm not certain what I want the core UI display to be right here. I don't know if it's the streak or your current estimated testosterone or maybe both. Maybe it could be actions remaining for the day. So maybe we go more habit tracker style. It could be interesting to have percent completion. And we show that through the previous days. And we can fill it up. I want to do this right. And yet at the same time, I want to move relatively quickly. Okay. Let's do this. So at the top, we're gonna do the streak. We'll just do pretty basic. I'm here. I'm gonna create a component or a frame so that I can auto layout and then just bang, bang, bang, bang. That should be seven. It should be seven. We'll maybe increase the size of this a little bit. And I'll add a note here and this is weekly out. So I'll add these comments if I'm working with someone, either a designer or co-founder. It's very important to have comments here as you're going through the process wire framing. So they know what you're actually building out. Now, I think maybe some text along the lines of like, maybe we say like you, maybe we give like a percent score. Let's give you interesting. Let me bring this in a little bit. All right, let's do a little percent score. I know like more common is streak, right? And I think that streak is good, but I want something that's like a, you know. Maybe it's um, that's the thing. Maybe it's um, I'm not sure if I can make a mistake. I want like a number, you know, I want something that where you're like, I need to ensure that I'm hitting this every single day. So, right? So for quitter, they have the, the amount of time that you've been free from point for Cal AI. We have your daily calories for UMACs. I actually think that this was a major shortcoming, which was that we did not have a lot of time. I think that's a lot of time. I think that's a lot of time. Which was that we did not have a sort of core action to return to. We had this daily tab here, which was kind of a routine, but the fact that that wasn't on the first page, it was a major issue. Okay, we'll leave this for now. This will um, I'll just add a note. I'll be like, I want something catchy here. Okay. And then your actual actions will be your routine. Right? So we'll have here. So, uh, whoa, what did I do here? Action one. Action two and so forth. Yeah. Cool. Don't worry about the little thing myself that I'm doing with the components and whatnot. If you don't know how to do it, no worries. You'll learn with time. I'm not all that good with stigma, right? But um, okay. All right. So I have the core sort of habits here. Um, maybe I should have named these habits and cares. And then I kind of like what quitter does here with like the panic button at the bottom. Um, we want the analysis to be obvious enough. So this will probably be when the individual has already, when the individual has already sort of a, perform their first analysis because that will set their habits. But if they have not completed their habits, we'll say, we'll maybe do the UMAC style, complete your first analysis. All right. We'll change this. This will just be like button. Cool. One more thing. Oops. I should just ungroup this. Okay. So when you have not performed your first analysis, it'll ask you to start. Once you have performed it, the core action will be the number of habits that you have. Um, we'll just name this to actions. The number of actions that you have remaining for the day. You can go ahead and frame this. I'll make it nice and pretty. I'm just going to center that real quick. Sorry. I'm being a little bit of a perfectionist here, which is somewhat ironic, because wireframe is obviously imperfect. Great. Now what I have here is I have like the basic skeleton for the core functionality of the app. We have the homepage where if you haven't scanned, it prompts you to start. We would then have some sort of upload flow, right? So that would come in between these two. So move this on over. Insert upload flow. And then we have this. And to be honest, like this is all that you really need to know when it comes to wireframing. There's a good amount of theory, and we'll touch on that a little bit more in the next unit of this module for design. But I think that this covers the high level. Take screenshots of other apps, clearly define what your actions are within the product, and keep it as simple as possible to start, and then whip up your first couple of screens. In the next lesson, we're going to go over hiring a designer. So honestly, screens like this are more than enough to begin working with a designer. I've worked on working with the designers with much less than this before, to be honest, like as little as this, honestly. Now the reason that I try to hire a designer pretty quickly in the project is, if you want to move as fast as possible, and you're not constrained by capital, I'm sure some people here are, that's fine, we did not hire one for a plug AI, actually ever. Then as soon as you figure out what the kind of like, even just one screen of the app is going to look like, you explain the project to a bunch of designers, you can start testing, figuring out who's best. Once again, we're going to go over this in the next lesson, but yeah, this is essentially my process for wire framing. See you guys later.