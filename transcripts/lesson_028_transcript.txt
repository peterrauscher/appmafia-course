 Now if you're pretty serious about coding long term, this is very important to know, whereas if you're just following this tutorial as fine, I will match this architecture anyway, but the most optimal way to structure code in SwiftUI is model, view, model, and view. So the view model acts as the back end, and that back end works with the front end, and also the models to make a very cohesive app. Now, as might be confusing, there's a little diagram on the screen that explains how it works, like user lectures from the view, go back to the view model, and that transmutes back to the model and then the view. It's a pretty simple structure, but I generally recommend knowing or understanding this before we get started, instead of over-complicated code, et cetera, et cetera. But as I said, during this tutorial, I will stick to this architecture anyway, so you have nothing to worry about, but longer term is important to know this is very fundamental so in a long-lasting app, we'll say that.